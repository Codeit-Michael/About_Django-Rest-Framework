Requirements:
pip install djangorestframework
pip install markdown       # Markdown support for the browsable API.
pip install django-filter  # Filtering support

Setting up:
1. List the 'rest_framework' on your settings.py/'INSTALLED_APPS'
2. Add the ff. at {proj. name}/urls.py for login/logout views:
    path('api-auth/', include('rest_framework.urls'))

Additional:
a. Any global settings for a REST framework API are kept in a single configuration
dictionary named REST_FRAMEWORK. Start off by adding the following to your settings.py
module:
	REST_FRAMEWORK = {
	    # Use Django's standard `django.contrib.auth` permissions,
	    # or allow read-only access for unauthenticated users.
	    'DEFAULT_PERMISSION_CLASSES': [
	        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
	    ]
	}

b. Add 'rest_framework' to INSTALLED_APPS

c. Edit the {project}/urls.py:from django.contrib import admin
	from django.urls import path, include
	from django.contrib.auth.models import User
	from rest_framework import routers, serializers, viewsets

	# Serializers define the API representation.
	class UserSerializer(serializers.HyperlinkedModelSerializer):
	    class Meta:
	        model = User
	        fields = ['url', 'username', 'email', 'is_staff']

	# ViewSets define the view behavior.
	class UserViewSet(viewsets.ModelViewSet):
	    queryset = User.objects.all()
	    serializer_class = UserSerializer

	# Routers provide an easy way of automatically determining the URL conf.
	router = routers.DefaultRouter()
	router.register(r'users', UserViewSet)

	# Wire up our API using automatic URL routing.
	# Additionally, we include login URLs for the browsable API.include
	urlpatterns = [
		path('admin/', admin.site.urls),
		path('', include(router.urls)),
		path('api-auth/', include('rest_framework.urls',namespace='rest_framework')),
	]
